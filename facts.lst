2LS          :: C
2LS          :: PV3           :: can generate properties within certain conditions
ABC          :: PV4           :: versatile verification and synthesis arsenal
ABC          :: Synthesis
ACL2         :: LISP
ACL2         :: PV5           :: a full-fledged language to write specs and prove their properties
AdamMC       :: Flow-LTL
AdamMC       :: Petri Nets    :: also software-defined networks
AdamMC       :: PV2           :: verifies user-specified properties of Petri nets
APOET        :: C
Batfish      :: Datalog
Batfish      :: Networks
Batfish      :: PV2           :: checks properties of networks
Boogie       :: PV3           :: infers invariants and generates verification conditions to pass to Z3
CBMC         :: C
CBMC         :: C++
CBMC         :: PV2           :: verifies given/parameterised properties of C code
Cerberus-BMC :: Concurrency
Cerberus-BMC :: PV1           :: checks a C program against a predefined concurrency model
DaPPer       :: Probabilistic
DaPPer       :: PV4           :: synthesises probabilistic programs from relational datasets
DaPPer       :: Synthesis
Dartagnan    :: C
Dartagnan    :: PV2           :: checks assertions in a C program
DLC          :: Concurrency
DLC          :: PV3           :: compiles a formal specification of a concurrent system to a program
DPU          :: C
DPU          :: Concurrency
DPU          :: PV1           :: borderline PV2 (relies on user-driven assertions) but mostly works with assumed properties
EBMC         :: Hardware
EBMC         :: LTL           :: also can work with SystemVerilog assertions
EBMC         :: PV2           :: checks assertions/properties against a Verilog/Netlists/â€¦ spec
FOADA        :: Automata
FOADA        :: PV1           :: checks whether the given automaton is empty
JBMC         :: Java
JBMC         :: PV2           :: checks user-defined assertions in runtime exceptions in Java code
JPF          :: Java
JPF          :: PV2           :: checks properties of annotated Java code
KMC          :: Automata
KMC          :: PV1           :: checks compatibility of communicating automata
POET         :: C
QuIP         :: Automata
QuIP         :: PV1           :: comparator of two weighted automata
SPAN         :: PV1           :: computes whether two protocols are indistinguishable
SPAN         :: Security
SPARK        :: Ada
Storm        :: Probabilistic
Storm        :: PV4           :: computes how a given property is related to a given specification
TAPAAL       :: Petri Nets
TAPAAL       :: PV2           :: performs queries on Petri nets